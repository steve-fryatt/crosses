REM >!Crosses
REM
REM Copyright 1993-2014, Stephen Fryatt (info@stevefryatt.org.uk)
REM
REM This file is part of Crosses:
REM
REM   http://www.stevefryatt.org.uk/software/
REM
REM Licensed under the EUPL, Version 1.1 only (the "Licence");
REM You may not use this work except in compliance with the
REM Licence.
REM
REM You may obtain a copy of the Licence at:
REM
REM   http://joinup.ec.europa.eu/software/page/eupl
REM
REM Unless required by applicable law or agreed to in
REM writing, software distributed under the Licence is
REM distributed on an "AS IS" basis, WITHOUT WARRANTIES
REM OR CONDITIONS OF ANY KIND, either express or implied.
REM
REM See the Licence for the specific language governing
REM permissions and limitations under the Licence.

LIBRARY "BASIC:Icon"
LIBRARY "BASIC:LegacyWimp"
LIBRARY "BASIC:Legacy3D"
LIBRARY "BASIC:Menu"
LIBRARY "BASIC:Message"
LIBRARY "BASIC:Resources"
LIBRARY "BASIC:Template"
LIBRARY "BASIC:Url"
LIBRARY "BASIC:WimpError"

PROCwimperror_initialise("Crosses", "!crosses")
ON ERROR result% = FNwimperror_program : END

REM These values get replaced by tokenize.

build_version$ = "1.10"
build_date$ = "01 Jul 2009"

PROC3D_init
PROCinitialise


ON ERROR Quit% = FNwimperror_program

WHILE NOT Quit%
	PROCpoll
ENDWHILE

SYS "Wimp_CloseDown"
END


REM Initialise ourselves, internally and with the Wimp.
:
DEF PROCinitialise
LOCAL resources$, task_name$, task_sprite$, indirected_data%, indirected_size%

REM Set up the quit flag and global data blocks.

Quit% = FALSE

DIM b% 4000, q% 255, a% 255

REM Keep the LegacyWimp libraries happy.

safeblock% = q%
drag_start% = -1
drag_stop% = -1

REM Locate the application resources.

resources$ = FNresources_find_territory_folder("<Crosses$Dir>.Resources")

REM Load the messages file.

PROCmessage_initialise(resources$ + "Messages")

task_name$ = FNmessage_lookup("TaskName")
task_sprite$ = FNmessage_lookup("TaskSpr")
PROCwimperror_initialise(task_name$, task_sprite$)

REM Initialise with the Wimp.

q%!0 = &4E383
q%!4 = &4AF80
q%!8 = 0

SYS "Wimp_Initialise", 310, &4B534154, task_name$, q%

REM Load the window tamplates

indirected_size% = 2048
DIM indirected_data% indirected_size%

PROCtemplate_open(resources$ + "Templates")
PROCtemplate_load("ProgInfo", b%, indirected_data%, indirected_size%, -1)
SYS "Wimp_CreateWindow",,b% TO InfoWindow%
PROCtemplate_close

$FNicon_indirection(InfoWindow%, 4) = CHR$(169) + " Stephen Fryatt, 1993-" + MID$(build_date$, 8)
$FNicon_indirection(InfoWindow%, 6) = build_version$ + " (" + build_date$ + ")"

REM \TODO -- These need to be removed once everything is in templates.

PROCwindows
PROCicons

REM Initialise and load the menu templates

PROCmenu_initialise

b%!0 = InfoWindow%
b%!4 = OptionsWindow%
PROCmenu_load_templates(resources$ + "Menus", b%)
IconbarMenu% = b%!0







caracterwidth=1280/20 : characterheight=32

DIM subscripts(23),constinant(12),board(8),horisontal(8),vertical(8),count(12)
DATA 0,1,2,3,4,5,6,7,8,0,3,6,1,4,7,2,5,8,0,4,8,2,4,6
FOR I=0 TO 23:READ subscripts(I):NEXT I
DATA 0,7,31,128,-15,0,0,0,-63,0,0,0,0
FOR I=0 TO 12:READ constinant(I):NEXT I
DATA 0,1,4,192
READ blank,nought,cross,size
FOR I=0 TO 8
horisontal(I)=size*(1+(I MOD 3))
vertical(I)=size*(3-(I DIV 3))
NEXT I
ibar%=FNicon_bar(task_sprite$)
play%=FALSE
comp%=FALSE
games%=0
ENDPROC

DEF PROCwindows
board%=FNcreate_window(400,300,348,476,0,0,"Crosses",1,1,1,1,0,0,0,0,0,0,0,0,1,1)
OptionsWindow%=FNcreate_dialogue(672,488,"Options")
ENDPROC

DEF PROCicons
DIM i0% 1,i1% 1,i2% 1,i3% 1,i4% 1,i5% 1,i6% 1,i7% 1,i8% 1
$i0%="-"
$i1%="-"
$i2%="-"
$i3%="-"
$i4%="-"
$i5%="-"
$i6%="-"
$i7%="-"
$i8%="-"
icon%=FNcreate_icon(board%,3*4,-28*4,25*4,25*4,"",i0%,1,2,0,1,0,1,1,0,1,0,3,1,0,0,0,0,0)
icon%=FNcreate_icon(board%,31*4,-28*4,25*4,25*4,"",i1%,1,2,0,1,0,1,1,0,1,0,3,1,0,0,0,0,0)
icon%=FNcreate_icon(board%,59*4,-28*4,25*4,25*4,"",i2%,1,2,0,1,0,1,1,0,1,0,3,1,0,0,0,0,0)
icon%=FNcreate_icon(board%,3*4,-56*4,25*4,25*4,"",i3%,1,2,0,1,0,1,1,0,1,0,3,1,0,0,0,0,0)
icon%=FNcreate_icon(board%,31*4,-56*4,25*4,25*4,"",i4%,1,2,0,1,0,1,1,0,1,0,3,1,0,0,0,0,0)
icon%=FNcreate_icon(board%,59*4,-56*4,25*4,25*4,"",i5%,1,2,0,1,0,1,1,0,1,0,3,1,0,0,0,0,0)
icon%=FNcreate_icon(board%,3*4,-84*4,25*4,25*4,"",i6%,1,2,0,1,0,1,1,0,1,0,3,1,0,0,0,0,0)
icon%=FNcreate_icon(board%,31*4,-84*4,25*4,25*4,"",i7%,1,2,0,1,0,1,1,0,1,0,3,1,0,0,0,0,0)
icon%=FNcreate_icon(board%,59*4,-84*4,25*4,25*4,"",i8%,1,2,0,1,0,1,1,0,1,0,3,1,0,0,0,0,0)
DIM message% 19
$message%=""
icon%=FN3D_in(board%,3,-100,81,13,message%,20)
DIM xscore% 2,oscore% 2
$xscore%="0" : $oscore%="0"
icon%=FN3D_in(board%,3,-116,12,13,xscore%,3)
icon%=FN3D_in(board%,72,-116,12,13,oscore%,3)
PROCset_icon_colour(board%,10,11,1)
PROCset_icon_colour(board%,11,10,1)
DIM scores% 14
$scores%="Scores"
icon%=FNcreate_icon(board%,15*4,-116*4,57*4,13*4,"",scores%,-1,15,1,0,0,1,1,0,1,0,3,1,0,0,0,7,0)
:

PROC3D_border_name(OptionsWindow%,2,-53,80,45,"Player X")
PROC3D_border_name(OptionsWindow%,2,-120,80,59,"Player O")
DIM val% 7 : $val%="Soff,on"
DIM b1% 15 : $b1%="Computer player"
icon%=FNcreate_icon(OptionsWindow%,6*4,-83*4,74*4,13*4,"",b1%,val%,16,1,1,0,0,1,0,1,0,3,1,0,0,0,7,1)
DIM namex% 9,nameo% 9,b2% 13
$b2%="Player's name"
$namex%=""
$nameo%=""
icon%=FNcreate_icon(OptionsWindow%,6*4,-30*4,68*4,13*4,"",b2%,val%,14,1,1,0,0,1,0,1,0,3,1,0,0,0,7,1)
icon%=FNcreate_icon(OptionsWindow%,6*4,-97*4,68*4,13*4,"",b2%,val%,14,1,1,0,0,1,0,1,0,3,1,0,0,0,7,1)
icon%=FN3D_writeable(OptionsWindow%,8,-47,68,13,namex%,10)
icon%=FN3D_writeable(OptionsWindow%,8,-114,68,13,nameo%,10)
PROCset_icon_state(OptionsWindow%,9,0,1,0)
PROCset_icon_state(OptionsWindow%,10,0,1,0)
icon%=FN3D_border_out(OptionsWindow%,86,-120,80,26)
PROC3D_border_name(OptionsWindow%,86,-90,80,82,"Options")
icon%=FN3D_action(OptionsWindow%,100,-34,52,15,"Reset Scores")
icon%=FN3D_action(OptionsWindow%,100,-53,52,15,"New Game")
DIM b3% 11 : $b3%="Score draws"
DIM b4% 11 : $b4%="Count games"
icon%=FNcreate_icon(OptionsWindow%,95*4,-69*4,68*4,13*4,"",b3%,val%,12,1,1,0,0,1,0,1,0,3,1,0,0,0,7,1)
icon%=FNcreate_icon(OptionsWindow%,95*4,-83*4,68*4,13*4,"",b4%,val%,12,1,1,0,0,1,0,1,0,3,1,0,0,0,7,1)
icon%=FN3D_default(OptionsWindow%,104,-114,45,13,"OK")
ENDPROC

DEF PROCpoll
LOCAL reopen%, reason%
SYS "Wimp_Poll",0,b% TO reason%
CASE reason% OF
WHEN 2 : SYS "Wimp_OpenWindow",,b%
WHEN 3 : SYS "Wimp_CloseWindow",,b%
WHEN 6 : PROCmouse_click(b%!12,b%!16,b%!8)
WHEN 8 : SYS "Wimp_ProcessKey",b%!24
WHEN 9
 SYS "Wimp_GetPointerInfo",,q%
 reopen%=(q%!8 = 1)
 CASE !b% OF
  WHEN 1 : OSCLI("%Filer_Run <Crosses$Dir>.!Help")
  WHEN 3 : Quit%=TRUE
 ENDCASE
 IF reopen% THEN PROCdisplay_menu(FNmenu_current_handle, 0, 0)
WHEN 17,18
 CASE b%!16 OF
  WHEN 0      : Quit%=TRUE
  WHEN &4E383 : PROCurl_bounce(b%)
 ENDCASE
WHEN 19 : IF b%!16 = &4AF80 THEN PROCurl_bounce(b%)
ENDCASE
ENDPROC
:
DEF PROCnew_game
moves=0
$i0%="-"
$i1%="-"
$i2%="-"
$i3%="-"
$i4%="-"
$i5%="-"
$i6%="-"
$i7%="-"
$i8%="-"
board()=0
play%=TRUE
player%=-1
IF FNicon_state(OptionsWindow%,7) THEN
$message%=$namex%+" to move"
ELSE
$message%="X to move"
ENDIF
PROCset_icon_colour(board%,9,11,1)
ENDPROC
:
DEF PROCmouse_click(window%,icon%,buttons%)
CASE window% OF
   WHEN -2
      CASE buttons% OF
         WHEN 1,4
            IF NOT play% THEN
            PROCnew_game
            PROCopen_window(board%)
            PROCredraw_window(board%)
            ELSE
            PROCopen_window(board%)
            ENDIF
         WHEN 2
            PROCmenu_create_iconbar(IconbarMenu%, !b%)
         ENDCASE
   WHEN board%
      CASE icon% OF
         WHEN 0,1,2,3,4,5,6,7,8
            IF play% AND board(icon%)=0 THEN
            N=icon%
            IF player% PROCdrawX ELSE PROCdrawO
            IF player% THEN moves+=1
            player%=NOT player%
            PROCcomp
            IF (NOT xwin) AND (NOT owin) THEN
            IF moves>=5 THEN PROCdraw
            ENDIF
            IF moves<5 AND (NOT xwin) AND comp% PROCdrawO : player%=NOT player%
            IF xwin THEN PROCxwin
            IF owin THEN PROCowin
            ENDIF
         ENDCASE
   WHEN OptionsWindow%
      CASE icon% OF
         WHEN 6
            PROCset_icon_state(OptionsWindow%,6,ABS(FNicon_state(OptionsWindow%,6)=0),0,0)
            comp%=NOT comp%
         WHEN 7
            PROCset_icon_state(OptionsWindow%,7,ABS(FNicon_state(OptionsWindow%,7)=0),0,0)
            PROCset_icon_state(OptionsWindow%,9,0,ABS(FNicon_state(OptionsWindow%,7)=0),0)
         WHEN 8
            PROCset_icon_state(OptionsWindow%,8,ABS(FNicon_state(OptionsWindow%,8)=0),0,0)
            PROCset_icon_state(OptionsWindow%,10,0,ABS(FNicon_state(OptionsWindow%,8)=0),0)
         WHEN 15
            $xscore%="0"
            $oscore%="0"
            games%=0
            IF FNicon_state(OptionsWindow%,18) THEN
            $scores%="Scores (of 0)"
            ENDIF
            PROCredraw_window(board%)
         WHEN 16
            PROCnew_game
            PROCredraw_window(board%)
         WHEN 17
            PROCset_icon_state(OptionsWindow%,17,ABS(FNicon_state(OptionsWindow%,17)=0),0,0)
         WHEN 18
            PROCset_icon_state(OptionsWindow%,18,ABS(FNicon_state(OptionsWindow%,18)=0),0,0)
            IF FNicon_state(OptionsWindow%,18) THEN
            $scores%="Scores (of "+STR$(games%)+")"
            ELSE
            $scores%="Scores"
            ENDIF
            PROCredraw_window(board%)
         WHEN 19
            PROCdisplay_menu(0,0,-1)
         ENDCASE
   WHEN InfoWindow%
      IF buttons% = 4 AND icon% = 8 THEN
         PROCurl_launch(FNmessage_lookup("SupportURL"))
         PROCdisplay_menu(-1,0,0)
      ENDIF
   ENDCASE
ENDPROC
:
DEF PROCcomp
max=-1000:xwin=FALSE:owin=FALSE
FOR P=0 TO 8
 IF board(P)=blank THEN
  IF comp% THEN board(P)=nought
  FOR I=1 TO 12:count(I)=0:NEXT I
  FOR I=0 TO 21 STEP 3
   type=board(subscripts(I))+board(subscripts(I+1))+board(subscripts(I+2))
   count(type)=count(type)+1
  NEXT I
  IF count(3) owin=TRUE
  IF count(12) xwin=TRUE
  IF comp% THEN
   score=0
   FOR I=1 TO 8
   score=score+count(I)*constinant(I)
   NEXT I
   IF score>max max=score:N=P
  ENDIF
  board(P)=blank
 ELSE
  FOR I=1 TO 12:count(I)=0:NEXT I
  FOR I=0 TO 21 STEP 3
   type=board(subscripts(I))+board(subscripts(I+1))+board(subscripts(I+2))
   count(type)=count(type)+1
  NEXT I
  IF count(3) owin=TRUE
  IF count(12) xwin=TRUE
 ENDIF
NEXT P
IF xwin AND owin AND comp% THEN owin=FALSE
ENDPROC
:
DEF PROCdrawX
CASE N OF
WHEN 0 : $i0%="x"
WHEN 1 : $i1%="x"
WHEN 2 : $i2%="x"
WHEN 3 : $i3%="x"
WHEN 4 : $i4%="x"
WHEN 5 : $i5%="x"
WHEN 6 : $i6%="x"
WHEN 7 : $i7%="x"
WHEN 8 : $i8%="x"
ENDCASE
board(N)=cross
PROCset_icon_colour(board%,9,10,1)
IF FNicon_state(OptionsWindow%,8) THEN
$message%=$nameo%+" to move"
ELSE
$message%="O to move"
ENDIF
PROCredraw_window(board%)
ENDPROC

DEF PROCdrawO
CASE N OF
WHEN 0 : $i0%="0"
WHEN 1 : $i1%="0"
WHEN 2 : $i2%="0"
WHEN 3 : $i3%="0"
WHEN 4 : $i4%="0"
WHEN 5 : $i5%="0"
WHEN 6 : $i6%="0"
WHEN 7 : $i7%="0"
WHEN 8 : $i8%="0"
ENDCASE
board(N)=nought
IF NOT owin THEN
IF FNicon_state(OptionsWindow%,7) THEN
$message%=$namex%+" to move"
ELSE
$message%="X to move"
ENDIF
ENDIF
PROCset_icon_colour(board%,9,11,1)
PROCredraw_window(board%)
ENDPROC

DEF PROCowin
play%=FALSE
IF FNicon_state(OptionsWindow%,8) THEN
$message%=$nameo%+" wins game"
ELSE
$message%="O wins game"
ENDIF
PROCset_icon_colour(board%,9,10,1)
IF LEN($oscore%)<3 THEN $oscore%=STR$(VAL($oscore%)+1)
IF FNicon_state(OptionsWindow%,18) THEN
IF games%<99 THEN games%+=1
$scores%="Scores (of "+STR$(games%)+")"
ELSE
$scores%="Scores"
ENDIF
PROCredraw_window(board%)
ENDPROC
:
DEF PROCxwin
play%=FALSE
IF FNicon_state(OptionsWindow%,7) THEN
$message%=$namex%+" wins game"
ELSE
$message%="X wins game"
ENDIF
PROCset_icon_colour(board%,9,11,1)
IF LEN($xscore%)<3 THEN $xscore%=STR$(VAL($xscore%)+1)
IF FNicon_state(OptionsWindow%,18) THEN
IF games%<99 THEN games%+=1
$scores%="Scores (of "+STR$(games%)+")"
ELSE
$scores%="Scores"
ENDIF
PROCredraw_window(board%)
ENDPROC
:
DEF PROCdraw
play%=FALSE
$message%="Game drawn"
PROCset_icon_colour(board%,9,7,1)
IF FNicon_state(OptionsWindow%,17) THEN
IF LEN($xscore%)<3 THEN $xscore%=STR$(VAL($xscore%)+1)
IF LEN($oscore%)<3 THEN $oscore%=STR$(VAL($oscore%)+1)
ENDIF
IF FNicon_state(OptionsWindow%,18) THEN
IF games%<99 THEN games%+=1
$scores%="Scores (of "+STR$(games%)+")"
ELSE
$scores%="Scores"
ENDIF
PROCredraw_window(board%)
ENDPROC
